--- NVIDIA-Linux-x86_64-390.151-no-compat32/kernel/nvidia/nv.c~	2022-04-20 19:57:55.000000000 +0200
+++ NVIDIA-Linux-x86_64-390.151-no-compat32/kernel/nvidia/nv.c	2022-05-26 10:54:29.375034057 +0200
@@ -2742,7 +2742,11 @@
     if (!nvl->tce_bypass_enabled)
     {
         NvU64 new_mask = (((NvU64)1) << phys_addr_bits) - 1;
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 18, 0)
         pci_set_dma_mask(nvl->dev, new_mask);
+#else
+        dma_set_mask(&nvl->dev->dev, new_mask);
+#endif
     }
 }
 
--- NVIDIA-Linux-x86_64-390.151-no-compat32/kernel/nvidia/nv-dma.c.orig	2022-04-20 19:57:55.000000000 +0200
+++ NVIDIA-Linux-x86_64-390.151-no-compat32/kernel/nvidia/nv-dma.c	2022-05-26 11:03:12.139154417 +0200
@@ -27,8 +27,13 @@
     NvU64 *va
 )
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 18, 0)
     *va = pci_map_page(dma_map->dev, dma_map->pages[0], 0,
             dma_map->page_count * PAGE_SIZE, PCI_DMA_BIDIRECTIONAL);
+#else
+    *va = dma_map_page(&dma_map->dev->dev, dma_map->pages[0], 0,
+            dma_map->page_count * PAGE_SIZE, DMA_BIDIRECTIONAL);
+#endif
     if (NV_PCI_DMA_MAPPING_ERROR(dma_map->dev, *va))
     {
         return NV_ERR_OPERATING_SYSTEM;
@@ -57,8 +62,13 @@
 
 static void nv_dma_unmap_contig(nv_dma_map_t *dma_map)
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 18, 0)
     pci_unmap_page(dma_map->dev, dma_map->mapping.contig.dma_addr,
             dma_map->page_count * PAGE_SIZE, PCI_DMA_BIDIRECTIONAL);
+#else
+    dma_unmap_page(&dma_map->dev->dev, dma_map->mapping.contig.dma_addr,
+            dma_map->page_count * PAGE_SIZE, DMA_BIDIRECTIONAL);
+#endif
 }
 
 static void nv_fill_scatterlist
@@ -166,10 +176,17 @@
 
     NV_FOR_EACH_DMA_SUBMAP(dma_map, submap, i)
     {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 18, 0)
         submap->sg_map_count = pci_map_sg(dma_map->dev,
                 NV_DMA_SUBMAP_SCATTERLIST(submap),
                 NV_DMA_SUBMAP_SCATTERLIST_LENGTH(submap),
                 PCI_DMA_BIDIRECTIONAL);
+#else
+        submap->sg_map_count = dma_map_sg(&dma_map->dev->dev,
+                NV_DMA_SUBMAP_SCATTERLIST(submap),
+                NV_DMA_SUBMAP_SCATTERLIST_LENGTH(submap),
+                DMA_BIDIRECTIONAL);
+#endif
         if (submap->sg_map_count == 0)
         {
             status = NV_ERR_OPERATING_SYSTEM;
@@ -197,9 +214,15 @@
             break;
         }
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 18, 0)
         pci_unmap_sg(dma_map->dev, NV_DMA_SUBMAP_SCATTERLIST(submap),
                 NV_DMA_SUBMAP_SCATTERLIST_LENGTH(submap),
                 PCI_DMA_BIDIRECTIONAL);
+#else
+        dma_unmap_sg(&dma_map->dev->dev, NV_DMA_SUBMAP_SCATTERLIST(submap),
+                NV_DMA_SUBMAP_SCATTERLIST_LENGTH(submap),
+                DMA_BIDIRECTIONAL);
+#endif
     }
 }
 
--- NVIDIA-Linux-x86_64-390.151-no-compat32/kernel/common/inc/nv-linux.h.orig	2022-04-20 19:57:56.000000000 +0200
+++ NVIDIA-Linux-x86_64-390.151-no-compat32/kernel/common/inc/nv-linux.h	2022-05-26 11:05:45.337533146 +0200
@@ -339,8 +339,13 @@
 
 #if defined(NV_PCI_DMA_MAPPING_ERROR_PRESENT)
 #if (NV_PCI_DMA_MAPPING_ERROR_ARGUMENT_COUNT == 2)
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 18, 0)
 #define NV_PCI_DMA_MAPPING_ERROR(dev, addr) \
     pci_dma_mapping_error(dev, addr)
+#else
+#define NV_PCI_DMA_MAPPING_ERROR(pdev, addr) \
+    dma_mapping_error(&pdev->dev, addr)
+#endif
 #elif (NV_PCI_DMA_MAPPING_ERROR_ARGUMENT_COUNT == 1)
 #define NV_PCI_DMA_MAPPING_ERROR(dev, addr) \
     pci_dma_mapping_error(addr)
